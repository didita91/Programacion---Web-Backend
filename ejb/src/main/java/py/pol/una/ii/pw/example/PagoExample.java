package py.pol.una.ii.pw.example;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class PagoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.pago
     *
     * @mbggenerated Sat Apr 23 22:10:07 PYT 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.pago
     *
     * @mbggenerated Sat Apr 23 22:10:07 PYT 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.pago
     *
     * @mbggenerated Sat Apr 23 22:10:07 PYT 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pago
     *
     * @mbggenerated Sat Apr 23 22:10:07 PYT 2016
     */
    public PagoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pago
     *
     * @mbggenerated Sat Apr 23 22:10:07 PYT 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pago
     *
     * @mbggenerated Sat Apr 23 22:10:07 PYT 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pago
     *
     * @mbggenerated Sat Apr 23 22:10:07 PYT 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pago
     *
     * @mbggenerated Sat Apr 23 22:10:07 PYT 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pago
     *
     * @mbggenerated Sat Apr 23 22:10:07 PYT 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pago
     *
     * @mbggenerated Sat Apr 23 22:10:07 PYT 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pago
     *
     * @mbggenerated Sat Apr 23 22:10:07 PYT 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pago
     *
     * @mbggenerated Sat Apr 23 22:10:07 PYT 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pago
     *
     * @mbggenerated Sat Apr 23 22:10:07 PYT 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pago
     *
     * @mbggenerated Sat Apr 23 22:10:07 PYT 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.pago
     *
     * @mbggenerated Sat Apr 23 22:10:07 PYT 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdPagoIsNull() {
            addCriterion("id_pago is null");
            return (Criteria) this;
        }

        public Criteria andIdPagoIsNotNull() {
            addCriterion("id_pago is not null");
            return (Criteria) this;
        }

        public Criteria andIdPagoEqualTo(Integer value) {
            addCriterion("id_pago =", value, "idPago");
            return (Criteria) this;
        }

        public Criteria andIdPagoNotEqualTo(Integer value) {
            addCriterion("id_pago <>", value, "idPago");
            return (Criteria) this;
        }

        public Criteria andIdPagoGreaterThan(Integer value) {
            addCriterion("id_pago >", value, "idPago");
            return (Criteria) this;
        }

        public Criteria andIdPagoGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_pago >=", value, "idPago");
            return (Criteria) this;
        }

        public Criteria andIdPagoLessThan(Integer value) {
            addCriterion("id_pago <", value, "idPago");
            return (Criteria) this;
        }

        public Criteria andIdPagoLessThanOrEqualTo(Integer value) {
            addCriterion("id_pago <=", value, "idPago");
            return (Criteria) this;
        }

        public Criteria andIdPagoIn(List<Integer> values) {
            addCriterion("id_pago in", values, "idPago");
            return (Criteria) this;
        }

        public Criteria andIdPagoNotIn(List<Integer> values) {
            addCriterion("id_pago not in", values, "idPago");
            return (Criteria) this;
        }

        public Criteria andIdPagoBetween(Integer value1, Integer value2) {
            addCriterion("id_pago between", value1, value2, "idPago");
            return (Criteria) this;
        }

        public Criteria andIdPagoNotBetween(Integer value1, Integer value2) {
            addCriterion("id_pago not between", value1, value2, "idPago");
            return (Criteria) this;
        }

        public Criteria andIdClienteIsNull() {
            addCriterion("id_cliente is null");
            return (Criteria) this;
        }

        public Criteria andIdClienteIsNotNull() {
            addCriterion("id_cliente is not null");
            return (Criteria) this;
        }

        public Criteria andIdClienteEqualTo(Integer value) {
            addCriterion("id_cliente =", value, "idCliente");
            return (Criteria) this;
        }

        public Criteria andIdClienteNotEqualTo(Integer value) {
            addCriterion("id_cliente <>", value, "idCliente");
            return (Criteria) this;
        }

        public Criteria andIdClienteGreaterThan(Integer value) {
            addCriterion("id_cliente >", value, "idCliente");
            return (Criteria) this;
        }

        public Criteria andIdClienteGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_cliente >=", value, "idCliente");
            return (Criteria) this;
        }

        public Criteria andIdClienteLessThan(Integer value) {
            addCriterion("id_cliente <", value, "idCliente");
            return (Criteria) this;
        }

        public Criteria andIdClienteLessThanOrEqualTo(Integer value) {
            addCriterion("id_cliente <=", value, "idCliente");
            return (Criteria) this;
        }

        public Criteria andIdClienteIn(List<Integer> values) {
            addCriterion("id_cliente in", values, "idCliente");
            return (Criteria) this;
        }

        public Criteria andIdClienteNotIn(List<Integer> values) {
            addCriterion("id_cliente not in", values, "idCliente");
            return (Criteria) this;
        }

        public Criteria andIdClienteBetween(Integer value1, Integer value2) {
            addCriterion("id_cliente between", value1, value2, "idCliente");
            return (Criteria) this;
        }

        public Criteria andIdClienteNotBetween(Integer value1, Integer value2) {
            addCriterion("id_cliente not between", value1, value2, "idCliente");
            return (Criteria) this;
        }

        public Criteria andFechaIsNull() {
            addCriterion("fecha is null");
            return (Criteria) this;
        }

        public Criteria andFechaIsNotNull() {
            addCriterion("fecha is not null");
            return (Criteria) this;
        }

        public Criteria andFechaEqualTo(Date value) {
            addCriterionForJDBCDate("fecha =", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaNotEqualTo(Date value) {
            addCriterionForJDBCDate("fecha <>", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaGreaterThan(Date value) {
            addCriterionForJDBCDate("fecha >", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fecha >=", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaLessThan(Date value) {
            addCriterionForJDBCDate("fecha <", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fecha <=", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaIn(List<Date> values) {
            addCriterionForJDBCDate("fecha in", values, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaNotIn(List<Date> values) {
            addCriterionForJDBCDate("fecha not in", values, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fecha between", value1, value2, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fecha not between", value1, value2, "fecha");
            return (Criteria) this;
        }

        public Criteria andPagoIsNull() {
            addCriterion("pago is null");
            return (Criteria) this;
        }

        public Criteria andPagoIsNotNull() {
            addCriterion("pago is not null");
            return (Criteria) this;
        }

        public Criteria andPagoEqualTo(Integer value) {
            addCriterion("pago =", value, "pago");
            return (Criteria) this;
        }

        public Criteria andPagoNotEqualTo(Integer value) {
            addCriterion("pago <>", value, "pago");
            return (Criteria) this;
        }

        public Criteria andPagoGreaterThan(Integer value) {
            addCriterion("pago >", value, "pago");
            return (Criteria) this;
        }

        public Criteria andPagoGreaterThanOrEqualTo(Integer value) {
            addCriterion("pago >=", value, "pago");
            return (Criteria) this;
        }

        public Criteria andPagoLessThan(Integer value) {
            addCriterion("pago <", value, "pago");
            return (Criteria) this;
        }

        public Criteria andPagoLessThanOrEqualTo(Integer value) {
            addCriterion("pago <=", value, "pago");
            return (Criteria) this;
        }

        public Criteria andPagoIn(List<Integer> values) {
            addCriterion("pago in", values, "pago");
            return (Criteria) this;
        }

        public Criteria andPagoNotIn(List<Integer> values) {
            addCriterion("pago not in", values, "pago");
            return (Criteria) this;
        }

        public Criteria andPagoBetween(Integer value1, Integer value2) {
            addCriterion("pago between", value1, value2, "pago");
            return (Criteria) this;
        }

        public Criteria andPagoNotBetween(Integer value1, Integer value2) {
            addCriterion("pago not between", value1, value2, "pago");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.pago
     *
     * @mbggenerated do_not_delete_during_merge Sat Apr 23 22:10:07 PYT 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.pago
     *
     * @mbggenerated Sat Apr 23 22:10:07 PYT 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}